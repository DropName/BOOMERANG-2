Snowman = table.copy(Enemy)

function Snowman:new(x, y, hasTaraxacum)
    local startTaraxacum = nil
    if hasTaraxacum then
        startTaraxacum = SpecialTaraxacum:new(
            x + data.Snowman.specialTaraxacum.shiftForCenterX,
            y + data.Snowman.specialTaraxacum.shiftForCenterY,
            data.Snowman.specialTaraxacum.radius,
            data.Snowman.specialTaraxacum.bodyLength,
            data.Snowman.specialTaraxacum.shiftForCenterX,
            data.Snowman.specialTaraxacum.shiftForCenterY
        )
    end
    local object = {
        x = x,
        y = y,
        speed = data.Snowman.speed,
        hp = data.Snowman.hp,
        sprite = data.Snowman.sprites.chill,
        hitbox = Hitbox:new(x, y, x + 16, y + 16),

        taraxacum = startTaraxacum,
        
        theWay = nil,

        status = 'idle',

        currentAnimations = {},
        outOfChaseTime = 0,
    }

    setmetatable(object, self)
    self.__index = self
    return object
end

function Snowman:_moveOneTile()
    if #self.theWay > 2 and self.status == 'chasing üßê' then -- —à–∏—Ä–æ–∫–∏–π –ø–∞—Ä–µ–Ω—å —É–≤–∞–∂–∞–µ—Ç –ª–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        self.x = 8 * self.theWay[2].x
        self.y = 8 * self.theWay[2].y
        self.hitbox:set_xy(self.x, self.y)
        self.taraxacum:move(self.x, self.y)
    elseif self.outOfChaseTime < #self.theWay - 2 and self.status == 'lost him üò†' then
        self.x = 8 * self.theWay[2 + self.outOfChaseTime].x
        self.y = 8 * self.theWay[2 + self.outOfChaseTime].y
        self.hitbox:set_xy(self.x, self.y)
        self.taraxacum:move(self.x, self.y)
    else
        trace('let me hug yuü§ó!!')
    end
end

function Snowman:_updatePath()
    -- –£—Ö —Ç—ã! –ö—Ä—É—Ç–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è.. ü§©ü§©
    -- –Ø –∑–Ω–∞—é üòé
    -- –∫–æ–≥–¥–∞ —É –Ω–∞—Å –Ω–∞—á–Ω–µ—Ç –ª–∞–≥–∞—Ç—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø—É—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ, –∞ –º–µ–Ω—è—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–≥–æ,
    -- –∫–∞–∫ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞. –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –æ—Ç –∫–æ–Ω—Ü–∞ –ø—É—Ç–∏ —Ä–∞—Å—à–∏—Ä—è—è —Ä–∞–¥–∏—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏. –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä—É—Ç–æ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞,
    -- –µ—Å–ª–∏ —Ç–∞–º –≥–ª—É–ø—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è. –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –ø—É—Ç—å –±—É–¥–µ—Ç –Ω–µ —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–æ –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π.
end

function Snowman:_onBeat()
    self:_moveOneTile()
    trace(self.status)
end

function Snowman:_setPath() 
    local way = aim.bfsMapAdaptedV2x2({x = self.x // 8, y = self.y // 8})
    if way then
        self.status = 'chasing üßê'
        self.theWay = way
        self.outOfChaseTime = 0
    else
        self.status = 'lost him üò†'
        self.outOfChaseTime = self.outOfChaseTime + 1
    end
end

function Snowman:update()
    if game.boomer.hitbox:collide(self.hitbox) then
        local damage = game.boomer.dpMs * Time.dt()
        self:takeDamage(damage)
    end

    if self.status == 'dying' then
        self.sprite:nextFrame()
        if self.sprite:animationEnd() then
            self:die()
        end
        return
    end

    if self:isDeadCheck() then
        self.sprite = data.Snowman.sprites.death:copy()
        self.status = 'dying'
        return
    end

    if game.metronome.on_beat then
        self:_setPath() 
        self:_onBeat()
    end

    self:_focusAnimations()
end

function Snowman:draw()
    --aim.visualizePath(self.theWay)

    self.sprite:draw(self.x - gm.x*8 + gm.sx, self.y - gm.y*8 + gm.sy, self.flip, self.rotate)
    --line(self.x + 5 - gm.x*8 + gm.sx, self.y + 10 - gm.y*8 + gm.sy, self.x + 18 - gm.x*8 + gm.sx, self.y - 3 - gm.y*8 + gm.sy, 10)
    --hardü•µcoded stick
    if self.taraxacum then
        self.taraxacum:draw()
    end

    self:_drawAnimations()
end
